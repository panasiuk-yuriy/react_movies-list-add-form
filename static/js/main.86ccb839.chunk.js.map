{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","patternToUrl","patternToId","NewMovie","state","errors","blurErrorText","event","target","id","value","length","setState","blurErrorUrl","test","blurErrorImdbId","handlerInput","name","returnMovie","preventDefault","props","addMovie","reset","this","checkErrors","Object","values","every","error","onSubmit","htmlFor","onChange","onBlur","type","undefined","disabled","Component","App","moviesFromServer","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86ccb839.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","/* eslint-disable react/prop-types */\nimport React, { Component } from 'react';\nimport './NewMovie.scss';\n\n// eslint-disable-next-line max-len\nconst patternToUrl = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\nconst patternToId = /^[a-z][a-z][0-9]{7}$/;\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    errors: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n  };\n\n  blurErrorText = (event) => {\n    const { id, value } = event.target;\n\n    if (value.length < 3) {\n      this.setState(state => ({\n        errors: {\n          ...state.errors, [id]: true,\n        },\n      }));\n    } else {\n      this.setState(state => ({\n        errors: {\n          ...state.errors, [id]: false,\n        },\n      }));\n    }\n  }\n\n  blurErrorUrl = (event) => {\n    const { id, value } = event.target;\n    const test = patternToUrl.test(value);\n\n    this.setState(state => ({\n      errors: {\n        ...state.errors, [id]: !test,\n      },\n    }));\n  }\n\n  blurErrorImdbId = (event) => {\n    const { id, value } = event.target;\n    const test = patternToId.test(value);\n\n    this.setState(state => ({\n      errors: {\n        ...state.errors, [id]: !test,\n      },\n    }));\n  }\n\n  handlerInput = (event) => {\n    const target = event.target.value;\n    const { name } = event.target;\n\n    this.setState({\n      [name]: target,\n    });\n  }\n\n  returnMovie = (event) => {\n    event.preventDefault();\n    this.props.addMovie(this.state);\n    this.reset();\n  }\n\n  reset = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      errors: {\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      },\n    });\n  }\n\n  render() {\n    const { title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      errors } = this.state;\n\n    const checkErrors = Object.values(errors).every(error => error === false);\n\n    return (\n      <form onSubmit={this.returnMovie}>\n        <label htmlFor=\"title\">Title:</label>\n        <input\n          value={title}\n          onChange={this.handlerInput}\n          onBlur={this.blurErrorText}\n          type=\"text\"\n          id=\"title\"\n          name=\"title\"\n          className={errors.title ? 'input_error' : undefined}\n        />\n        {errors.title\n        && (\n          <p className=\"error__message\">\n            Title shoud has more than 3 symbols\n          </p>\n        )}\n\n        <label htmlFor=\"description\">Description:</label>\n        <input\n          onChange={this.handlerInput}\n          onBlur={this.blurErrorText}\n          value={description}\n          type=\"text\"\n          id=\"description\"\n          name=\"description\"\n          className={errors.description ? 'input_error' : undefined}\n        />\n        {errors.description\n        && (\n          <p className=\"error__message\">\n            Title shoud has more than 3 symbols\n          </p>\n        )}\n\n        <label htmlFor=\"imgUrl\">imgUrl:</label>\n        <input\n          onChange={this.handlerInput}\n          onBlur={this.blurErrorUrl}\n          value={imgUrl}\n          type=\"text\"\n          id=\"imgUrl\"\n          name=\"imgUrl\"\n          className={errors.imgUrl ? 'input_error' : undefined}\n        />\n        {errors.imgUrl\n        && (\n          <p className=\"error__message\">\n            Please enter the correct URL\n          </p>\n        )}\n\n        <label htmlFor=\"imdbUrl\">imdbUrl:</label>\n        <input\n          onChange={this.handlerInput}\n          onBlur={this.blurErrorUrl}\n          value={imdbUrl}\n          type=\"text\"\n          id=\"imdbUrl\"\n          name=\"imdbUrl\"\n          className={errors.imdbUrl ? 'input_error' : undefined}\n        />\n        {errors.imdbUrl\n          && (\n            <p className=\"error__message\">\n              Please enter the correct URL\n            </p>\n          )}\n\n        <label htmlFor=\"imdbId\">imdbId:</label>\n        <input\n          onChange={this.handlerInput}\n          onBlur={this.blurErrorImdbId}\n          value={imdbId}\n          type=\"text\"\n          id=\"imdbId\"\n          name=\"imdbId\"\n          className={errors.imdbId ? 'input_error' : undefined}\n        />\n        {errors.imdbId\n          && (\n            <p className=\"error__message\">\n              Please enter corect ID (exm: tt1234567)\n            </p>\n          )}\n\n        <input disabled={!checkErrors} type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prev => (\n      { movies: [...prev.movies, movie] }\n    ));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}